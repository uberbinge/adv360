#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/* Manually define key positions */

#define LT0 0
#define LT1 1
#define LT2 2
#define LT3 3
#define LT4 4
#define LM0 5
#define LM1 6
#define LM2 7
#define LM3 8
#define LM4 9
#define LB0 10
#define LB1 11
#define LB2 12
#define LB3 13
#define LB4 14
#define RT0 15
#define RT1 16
#define RT2 17
#define RT3 18
#define RT4 19
#define RM0 20
#define RM1 21
#define RM2 22
#define RM3 23
#define RM4 24
#define RB0 25
#define RB1 26
#define RB2 27
#define RB3 28
#define RB4 29
#define LH2 30
#define LH1 31
#define LH0 32
#define RH0 33
#define RH1 34
#define RH2 35

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        /* Timer-less HRMs for left hand */

        hml: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4 LH2 LH1 LH0 RH0 RH1 RH2>;
            hold-trigger-on-release;
        };

        /* Timer-less HRMs for right hand */

        hmr: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4 LH2 LH1 LH0 RH0 RH1 RH2>;
            hold-trigger-on-release;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1           &kp N2               &kp N3             &kp N4               &kp N5  &tog 4                                                                                            &mo 3      &kp N6  &kp N7                &kp N8              &kp N9                &kp N0               &kp MINUS
&kp TAB    &kp Q            &kp W                &kp E              &kp R                &kp T   &none                                                                                             &none      &kp Y   &kp U                 &kp I               &kp O                 &kp P                &kp BSLH
&kp ESC    &hml LEFT_ALT A  &hml LEFT_CONTROL S  &hml LEFT_SHIFT D  &hml LEFT_COMMAND F  &kp G   &none          &kp LEFT_COMMAND  &kp LEFT_CONTROL       &kp RIGHT_CONTROL      &kp RIGHT_COMMAND  &none      &kp H   &hmr RIGHT_COMMAND J  &hmr RIGHT_SHIFT K  &hmr RIGHT_CONTROL L  &hmr RIGHT_ALT SEMI  &kp SQT
&kp LSHFT  &kp Z            &kp X                &kp C              &kp V                &kp B                                    &hm LEFT_ALT HOME      &hm RIGHT_ALT PAGE_UP                                &kp N   &kp M                 &kp COMMA           &kp DOT               &kp FSLH             &kp RSHFT
&mo 1      &kp GRAVE        &kp CAPS             &kp LEFT           &kp RIGHT                    &kp BACKSPACE  &lt 2 DELETE      &kp END                &kp PG_DN              &kp ENTER          &kp SPACE          &kp UP                &kp DOWN            &kp LBKT              &kp RBKT             &mo 1
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 4                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        symbol {
            bindings = <
&trans  &trans        &trans            &trans          &trans            &trans             &trans                                                    &trans                    &trans           &trans         &trans        &trans     &trans        &trans
&trans  &trans        &trans            &trans          &trans            &trans             &kp LG(LS(NUMBER_4))                                      &kp LG(LS(LC(NUMBER_4)))  &kp AT_SIGN      &kp LS(LPAR)   &kp LS(LBRC)  &kp LBKT   &kp ASTERISK  &trans
&trans  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LC(LA(ENTER))  &kp LA(LC(LEFT))      &trans  &trans      &trans  &trans  &kp LC(LA(RIGHT))         &kp RCTRL        &kp LS(UNDER)  &kp EQUAL     &kp MINUS  &kp PLUS      &kp LS(DLLR)
&trans  &trans        &trans            &trans          &trans            &trans                                           &trans      &trans                                    &kp EXCLAMATION  &kp LS(RPAR)   &kp LS(RBRC)  &kp RBKT   &trans        &trans
&trans  &trans        &trans            &trans          &trans                               &trans                &trans  &trans      &trans  &trans  &trans                                     &trans         &trans        &trans     &trans        &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 1      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 1
            >;
        };
    };
};
